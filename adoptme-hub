
repeat task.wait() until game:IsLoaded()
loadstring(game:HttpGet("https://raw.githubusercontent.com/CKScrips/TestAdopt/refs/heads/main/global"))()
local StartTime = tick()
local A = loadstring(game:HttpGet("https://raw.githubusercontent.com/CKScrips/TestAdopt/refs/heads/main/Games-list"))()

local ScreenGui = Instance.new("ScreenGui")
if syn and syn.protect_gui then
	syn.protect_gui(ScreenGui)
	ScreenGui.Parent = CoreGui
elseif gethui then
	ScreenGui.Parent = gethui()
else
	ScreenGui.Parent = CoreGui
end

local ImageLabel = Instance.new("ImageLabel")
ImageLabel.Parent = ScreenGui
ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel.BackgroundTransparency = 1
ImageLabel.Position = UDim2.new(0.5, -(303 / 2), 0.5, -(263 / 2))
ImageLabel.Rotation = 0
ImageLabel.Size = UDim2.new(0, 303, 0, 263)
ImageLabel.Image = ""
ImageLabel.ImageTransparency = 1

for Index = 1, 50, 2 do
ImageLabel.ImageTransparency = ImageLabel.ImageTransparency - 0.1
wait()
end
ScreenGui:Destroy()


for i, v in next, A do
	if i == game.GameId or i == game.PlaceId then
		loadstring(game:HttpGet(v))()
	end
end

print("Took ", tick() - StartTime, " To Load <3")

local function Copy()
	setclipboard("done")
end
local Gang = Instance.new("BindableFunction")

function Gang.OnInvoke(v)
	if v == "Yes" then
		Copy()
		VG.SendNotification("No", "", 15)
	end
end

queue_on_teleport[[loadstring(game:HttpGet("https://raw.githubusercontent.com/CKScrips/TestAdopt/refs/heads/main/adoptme-hub"))()]]
